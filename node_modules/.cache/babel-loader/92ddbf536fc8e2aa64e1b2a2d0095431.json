{"remainingRequest":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/babel-loader/lib/index.js!/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rabie/Desktop/eee/GlassBook2/client/glass-book/src/components/post/Posts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/src/components/post/Posts.vue","mtime":1607328282528},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFBvc3QgZnJvbSAiLi9wb3N0IjsgLy8gaW1wb3J0IHsgbWFwQWN0aW9ucyB9IGZyb20gInZ1ZXgiOwoKaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAiLi4vLi4vc3RvcmUvdHlwZXMiOyAvLyBpbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwoKZ2xvYmFsLmpRdWVyeSA9IHJlcXVpcmUoImpxdWVyeSIpOwp2YXIgJCA9IGdsb2JhbC5qUXVlcnk7CndpbmRvdy4kID0gJDsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbmRleDogMCAvLyBwb3N0czogW10sCgogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwb3N0czogZnVuY3Rpb24gcG9zdHMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldFBvc3RzOwogICAgfSwKICAgIGNvbW1lbnRzOiBmdW5jdGlvbiBjb21tZW50cygpIHsKICAgICAgcmV0dXJuIFsiYWEiLCAiYmIiXTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCh0eXBlcy5HRVRfRlJJRU5EX1BPU1RTLCAwKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGluUG9zdENsaWNrOiBmdW5jdGlvbiBpblBvc3RDbGljayhwb3N0KSB7CiAgICAgIGNvbnNvbGUubG9nKCJQb3N0cy52dWUgaW5Qb3N0Q2xpY2siLCBwb3N0KTsKICAgIH0sCiAgICBzY3JvbGw6IGZ1bmN0aW9uIHNjcm9sbCgpIHsKICAgICAgdmFyIHQgPSB0aGlzOwogICAgICAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoJCh3aW5kb3cpLnNjcm9sbFRvcCgpICsgJCh3aW5kb3cpLmhlaWdodCgpID4gJChkb2N1bWVudCkuaGVpZ2h0KCkgLSAxMDApIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCIgYm90dG9tISIpOwogICAgICAgICAgdC5pbmRleCArPSAyOwogICAgICAgICAgdC4kc3RvcmUuZGlzcGF0Y2godHlwZXMuR0VUX0ZSSUVORF9QT1NUUywgdC5pbmRleCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnNjcm9sbCgpOwogIH0sCiAgY29tcG9uZW50czogewogICAgIm15LXBvc3QiOiBQb3N0CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy4kcm91dGVyLmdvKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Posts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAA,IAAA,MAAA,QAAA,C,CACA;;AACA,OAAA,KAAA,KAAA,MAAA,mBAAA,C,CACA;;AACA,MAAA,CAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AACA,IAAA,CAAA,GAAA,MAAA,CAAA,MAAA;AACA,MAAA,CAAA,CAAA,GAAA,CAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,CADA,CAEA;;AAFA,KAAA;AAAA,GADA;AAKA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,QAAA;AACA,KAHA;AAKA,IAAA,QALA,sBAKA;AACA,aAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AACA;AAPA,GALA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,CAAA;AACA,GAhBA;AAkBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,IADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,uBAAA,EAAA,IAAA;AACA,KAHA;AAKA,IAAA,MALA,oBAKA;AACA,UAAA,CAAA,GAAA,IAAA;AACA,MAAA,CAAA,CAAA,MAAA,CAAA,CAAA,MAAA,CAAA,YAAA;AACA,YACA,CAAA,CAAA,MAAA,CAAA,CAAA,SAAA,KAAA,CAAA,CAAA,MAAA,CAAA,CAAA,MAAA,EAAA,GACA,CAAA,CAAA,QAAA,CAAA,CAAA,MAAA,KAAA,GAFA,EAGA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,UAAA;AACA,UAAA,CAAA,CAAA,KAAA,IAAA,CAAA;AACA,UAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,CAAA,CAAA,KAAA;AACA;AACA,OATA;AAUA;AAjBA,GAlBA;AAqCA,EAAA,OArCA,qBAqCA;AACA,SAAA,MAAA;AACA,GAvCA;AAwCA,EAAA,UAAA,EAAA;AACA,eAAA;AADA,GAxCA;AA2CA,EAAA,aA3CA,2BA2CA;AACA,SAAA,OAAA,CAAA,EAAA;AACA;AA7CA,CAAA","sourcesContent":["<template>\n  <div>\n    <div v-for=\"post in posts\" :key=\"post._id\" @click=\"inPostClick(post)\">\n      <my-post\n        :image=\"'http://localhost:3000/static/' + post._id + '.PNG'\"\n        :text=\"post.text\"\n        :id=\"post._id\"\n        :commentsArr=\"post.comments\"\n      >\n      </my-post>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Post from \"./post\";\n// import { mapActions } from \"vuex\";\nimport * as types from \"../../store/types\";\n// import axios from \"axios\";\nglobal.jQuery = require(\"jquery\");\nvar $ = global.jQuery;\nwindow.$ = $;\n\nexport default {\n  data: () => ({\n    index: 0,\n    // posts: [],\n  }),\n  computed: {\n    posts() {\n      return this.$store.getters.getPosts;\n    },\n\n    comments() {\n      return [\"aa\", \"bb\"];\n    },\n  },\n  created() {\n    this.$store.dispatch(types.GET_FRIEND_POSTS, 0);\n  },\n\n  methods: {\n    inPostClick(post) {\n      console.log(\"Posts.vue inPostClick\", post);\n    },\n\n    scroll() {\n      let t = this;\n      $(window).scroll(function () {\n        if (\n          $(window).scrollTop() + $(window).height() >\n          $(document).height() - 100\n        ) {\n          console.log(\" bottom!\");\n          t.index += 2;\n          t.$store.dispatch(types.GET_FRIEND_POSTS, t.index);\n        }\n      });\n    },\n  },\n  mounted() {\n    this.scroll();\n  },\n  components: {\n    \"my-post\": Post,\n  },\nbeforeDestroy () {\n this.$router.go()\n},\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components/post"}]}
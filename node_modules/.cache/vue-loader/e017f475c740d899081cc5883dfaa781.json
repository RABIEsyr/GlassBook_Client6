{"remainingRequest":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rabie/Desktop/eee/GlassBook2/client/glass-book/src/components/post/Posts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/src/components/post/Posts.vue","mtime":1607328282528},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQb3N0IGZyb20gIi4vcG9zdCI7Ci8vIGltcG9ydCB7IG1hcEFjdGlvbnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAiLi4vLi4vc3RvcmUvdHlwZXMiOwovLyBpbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpnbG9iYWwualF1ZXJ5ID0gcmVxdWlyZSgianF1ZXJ5Iik7CnZhciAkID0gZ2xvYmFsLmpRdWVyeTsKd2luZG93LiQgPSAkOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6ICgpID0+ICh7CiAgICBpbmRleDogMCwKICAgIC8vIHBvc3RzOiBbXSwKICB9KSwKICBjb21wdXRlZDogewogICAgcG9zdHMoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldFBvc3RzOwogICAgfSwKCiAgICBjb21tZW50cygpIHsKICAgICAgcmV0dXJuIFsiYWEiLCAiYmIiXTsKICAgIH0sCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2godHlwZXMuR0VUX0ZSSUVORF9QT1NUUywgMCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgaW5Qb3N0Q2xpY2socG9zdCkgewogICAgICBjb25zb2xlLmxvZygiUG9zdHMudnVlIGluUG9zdENsaWNrIiwgcG9zdCk7CiAgICB9LAoKICAgIHNjcm9sbCgpIHsKICAgICAgbGV0IHQgPSB0aGlzOwogICAgICAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoCiAgICAgICAgICAkKHdpbmRvdykuc2Nyb2xsVG9wKCkgKyAkKHdpbmRvdykuaGVpZ2h0KCkgPgogICAgICAgICAgJChkb2N1bWVudCkuaGVpZ2h0KCkgLSAxMDAKICAgICAgICApIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCIgYm90dG9tISIpOwogICAgICAgICAgdC5pbmRleCArPSAyOwogICAgICAgICAgdC4kc3RvcmUuZGlzcGF0Y2godHlwZXMuR0VUX0ZSSUVORF9QT1NUUywgdC5pbmRleCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5zY3JvbGwoKTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgICJteS1wb3N0IjogUG9zdCwKICB9LApiZWZvcmVEZXN0cm95ICgpIHsKIHRoaXMuJHJvdXRlci5nbygpCn0sCn07Cg=="},{"version":3,"sources":["Posts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Posts.vue","sourceRoot":"src/components/post","sourcesContent":["<template>\n  <div>\n    <div v-for=\"post in posts\" :key=\"post._id\" @click=\"inPostClick(post)\">\n      <my-post\n        :image=\"'http://localhost:3000/static/' + post._id + '.PNG'\"\n        :text=\"post.text\"\n        :id=\"post._id\"\n        :commentsArr=\"post.comments\"\n      >\n      </my-post>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Post from \"./post\";\n// import { mapActions } from \"vuex\";\nimport * as types from \"../../store/types\";\n// import axios from \"axios\";\nglobal.jQuery = require(\"jquery\");\nvar $ = global.jQuery;\nwindow.$ = $;\n\nexport default {\n  data: () => ({\n    index: 0,\n    // posts: [],\n  }),\n  computed: {\n    posts() {\n      return this.$store.getters.getPosts;\n    },\n\n    comments() {\n      return [\"aa\", \"bb\"];\n    },\n  },\n  created() {\n    this.$store.dispatch(types.GET_FRIEND_POSTS, 0);\n  },\n\n  methods: {\n    inPostClick(post) {\n      console.log(\"Posts.vue inPostClick\", post);\n    },\n\n    scroll() {\n      let t = this;\n      $(window).scroll(function () {\n        if (\n          $(window).scrollTop() + $(window).height() >\n          $(document).height() - 100\n        ) {\n          console.log(\" bottom!\");\n          t.index += 2;\n          t.$store.dispatch(types.GET_FRIEND_POSTS, t.index);\n        }\n      });\n    },\n  },\n  mounted() {\n    this.scroll();\n  },\n  components: {\n    \"my-post\": Post,\n  },\nbeforeDestroy () {\n this.$router.go()\n},\n};\n</script>\n\n<style>\n</style>\n"]}]}
{"remainingRequest":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rabie/Desktop/eee/GlassBook2/client/glass-book/src/App.vue?vue&type=template&id=7ba5bd90&scoped=true&","dependencies":[{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/src/App.vue","mtime":1607328282524},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/rabie/Desktop/eee/GlassBook2/client/glass-book/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}